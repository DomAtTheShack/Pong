Index: src/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferStrategy;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\n\r\npublic class Game extends Canvas implements Runnable {\r\n\r\n    private static boolean isRunning = false;\r\n    private static Thread thread;\r\n    private Handler handler;\r\n\r\n    public Game() throws IOException {\r\n        new Window(1000,700,\"Pong\", this);\r\n        start();\r\n        handler = new Handler();\r\n\r\n    }\r\n    public static void main(String[] args) throws IOException {\r\n        new Game();\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        this.requestFocus();\r\n        final int targetFps = 60;\r\n        final long nanoSecondInterval = 1_000_000_000 / targetFps;\r\n        long lastTime = System.nanoTime();\r\n        long timer = System.currentTimeMillis();\r\n        int frames = 0;\r\n        int updates = 0;\r\n\r\n        while(isRunning) {\r\n            long now = System.nanoTime();\r\n            if(now - lastTime > nanoSecondInterval) {\r\n                tick();\r\n                updates++;\r\n                render();\r\n                frames++;\r\n                lastTime = now;\r\n            }\r\n\r\n            if(System.currentTimeMillis() - timer > 1000) {\r\n                timer += 1000;\r\n                System.out.println(\"Ticks: \" + updates + \", FPS:\" + frames);\r\n                frames = 0;\r\n                updates = 0;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stop();\r\n        } catch (InterruptedException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    public void render() {\r\n        BufferStrategy bs = this.getBufferStrategy();\r\n        if(bs == null) {\r\n            this.createBufferStrategy(3);\r\n            return;\r\n        }\r\n        Graphics g = bs.getDrawGraphics();\r\n        g.setColor(Color.WHITE);\r\n        g.fillRect(0, 0, getWidth(), getHeight());\r\n\r\n        g.dispose();\r\n        bs.show();\r\n    }\r\n    public void tick(){\r\n    }\r\n    private void start(){\r\n        isRunning = true;\r\n        thread = new Thread(this);\r\n        thread.start();\r\n    }\r\n    private void stop() throws InterruptedException {\r\n        isRunning = false;\r\n        thread.join();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Game.java b/src/Game.java
--- a/src/Game.java	(revision 05624a3f3cb53aa396273028455aecf0809964da)
+++ b/src/Game.java	(date 1709228369212)
@@ -4,6 +4,7 @@
 import java.awt.image.BufferedImage;
 import java.io.IOException;
 
+
 public class Game extends Canvas implements Runnable {
 
     private static boolean isRunning = false;
